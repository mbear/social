<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/context 
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/tx 
                        http://www.springframework.org/schema/tx/spring-tx.xsd">

  <context:annotation-config />

  <context:component-scan base-package="com.zhisland.data.social" />

  <context:property-placeholder location="classpath:application.properties" />

  <tx:annotation-driven transaction-manager="transactionManager" />

  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"></property>
  </bean>

  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.zhisland.data.social.mappers" />
  </bean>

  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
    <constructor-arg index="0" ref="sqlSessionFactory" />
  </bean>

  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="typeAliasesPackage" value="com.zhisland.data.social.dtos" />
    <property name="mapperLocations" value="classpath*:com/zhisland/data/social/mappers/**/*.xml" />
  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="${jdbc.driverClassName}"></property>
    <property name="url" value="${jdbc.url}"></property>
    <property name="username" value="${jdbc.username}"></property>
    <property name="password" value="${jdbc.password}"></property>
    <property name="initialSize" value="20" /><!-- 初始化连接数 -->
    <property name="maxActive" value="300" /><!-- 最大连接数 -->
    <property name="maxIdle" value="50" /><!-- 最大空闲连接 -->
    <property name="minIdle" value="20" /><!-- 最小空闲连接 -->
    <property name="maxWait" value="1000" /><!-- 超时等待时间以毫秒为单位 -->
    <property name="logAbandoned" value="true" /><!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
    <property name="removeAbandoned" value="true" /><!-- 是否自动回收超时连接 -->
    <property name="removeAbandonedTimeout" value="60" /><!-- 超时时间(以秒数为单位) -->
    <property name="testOnBorrow" value="true" />
    <property name="validationQuery" value="${validationQuery}" />
  </bean>

  <!-- redis -->
  <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
    <property name="maxTotal" value="${jedis.pool.maxTotal}" />
    <property name="maxWaitMillis" value="${jedis.pool.maxWaitMillis}" />
    <property name="maxIdle" value="${jedis.pool.maxIdle}" />
    <property name="testOnBorrow" value="${jedis.pool.testOnBorrow}" />
    <property name="testWhileIdle" value="${jedis.pool.testOnReturn}" />
  </bean>

  <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
    <constructor-arg index="0" ref="jedisPoolConfig" />
    <constructor-arg index="1" value="${jedis.master.ip}" />
    <constructor-arg index="2" value="${jedis.master.port}" />
    <constructor-arg index="3" value="${jedis.master.timeout}" />
  </bean>

</beans>
